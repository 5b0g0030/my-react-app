{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\my-react-app\\\\src\\\\components\\\\calculator\\\\MyCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\"; // 從 React 庫中導入 React 和 useState 鉤子\nimport MyDisplay from \"./MyDisplay\"; // 導入自定義的 MyDisplay 組件\nimport MyButton from \"./MyButton\"; // 導入自定義的 MyButton 組件\nimport \"./MyCalculator.css\"; // 導入 MyCalculator 組件的 CSS 樣式\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyCalculator() {\n  _s();\n  const [result, setResult] = useState(\"0\"); // 使用 useState 鉤子初始化計算結果為 \"0\"\n\n  // handleClick 是 MyButton 的事件處理常式\n  const handleClick = value => {\n    // 根據按鈕的值進行不同的操作\n    switch (value) {\n      case \"0\":\n      case \"1\":\n      case \"2\":\n      case \"3\":\n      case \"4\":\n      case \"5\":\n      case \"6\":\n      case \"7\":\n      case \"8\":\n      case \"9\":\n      case \".\":\n      case \"+\":\n      case \"-\":\n      case \"*\":\n      case \"/\":\n        if (result === \"0\") {\n          // 如果當前結果為 \"0\"，則直接設置為按鈕的值\n          setResult(value);\n        } else {\n          // 否則，將按鈕的值附加到當前結果之後\n          setResult(result + value);\n        }\n        break;\n      case \"=\":\n        // 處理等號按鈕\n        setResult(eval(result).toString()); // 使用 eval 函數計算結果，並轉換為字符串\n        break;\n      case \"c\":\n        // 處理清除按鈕\n        setResult(\"\"); // 將結果設置為空字符串\n        break;\n      case \"+/-\":\n        // 處理正負號切換按鈕\n        setResult(parseInt(result, 10) * -1); // 將結果轉換為負數\n        break;\n      case \"%\":\n        // 處理百分比按鈕\n        setResult(parseInt(result, 10) / 100); // 將結果轉換為百分比\n        break;\n      default:\n        break;\n      // 默認情況下不做任何操作\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(MyDisplay, {\n      result: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(MyButton, {\n      buttonClicked: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(MyCalculator, \"2ehf/xE+vOUYTQbE2dlWSGghuW8=\");\n_c = MyCalculator;\nexport default MyCalculator; // 將 MyCalculator 組件作為默認導出\nvar _c;\n$RefreshReg$(_c, \"MyCalculator\");","map":{"version":3,"names":["React","useState","MyDisplay","MyButton","jsxDEV","_jsxDEV","MyCalculator","_s","result","setResult","handleClick","value","eval","toString","parseInt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","buttonClicked","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/my-react-app/src/components/calculator/MyCalculator.js"],"sourcesContent":["import React, { useState } from \"react\"; // 從 React 庫中導入 React 和 useState 鉤子\r\nimport MyDisplay from \"./MyDisplay\"; // 導入自定義的 MyDisplay 組件\r\nimport MyButton from \"./MyButton\"; // 導入自定義的 MyButton 組件\r\nimport \"./MyCalculator.css\"; // 導入 MyCalculator 組件的 CSS 樣式\r\n\r\nfunction MyCalculator() {\r\n  const [result, setResult] = useState(\"0\"); // 使用 useState 鉤子初始化計算結果為 \"0\"\r\n  \r\n  // handleClick 是 MyButton 的事件處理常式\r\n  const handleClick = (value) => {\r\n    // 根據按鈕的值進行不同的操作\r\n    switch (value) {\r\n      case \"0\":\r\n      case \"1\":\r\n      case \"2\":\r\n      case \"3\":\r\n      case \"4\":\r\n      case \"5\":\r\n      case \"6\":\r\n      case \"7\":\r\n      case \"8\":\r\n      case \"9\":\r\n      case \".\":\r\n      case \"+\":\r\n      case \"-\":\r\n      case \"*\":\r\n      case \"/\":\r\n        if (result === \"0\") { // 如果當前結果為 \"0\"，則直接設置為按鈕的值\r\n          setResult(value);\r\n        } else { // 否則，將按鈕的值附加到當前結果之後\r\n          setResult(result + value);\r\n        }\r\n        break;\r\n      case \"=\": // 處理等號按鈕\r\n        setResult(eval(result).toString()); // 使用 eval 函數計算結果，並轉換為字符串\r\n        break;\r\n      case \"c\": // 處理清除按鈕\r\n        setResult(\"\"); // 將結果設置為空字符串\r\n        break;\r\n      case \"+/-\": // 處理正負號切換按鈕\r\n        setResult(parseInt(result, 10) * -1); // 將結果轉換為負數\r\n        break;\r\n      case \"%\": // 處理百分比按鈕\r\n        setResult(parseInt(result, 10) / 100); // 將結果轉換為百分比\r\n        break;\r\n      default:\r\n        break; // 默認情況下不做任何操作\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"calculator\"> {/* 設置計算器的 CSS 樣式 */}\r\n      <MyDisplay result={result} /> {/* 渲染 MyDisplay 組件，並傳遞計算結果 */}\r\n      <MyButton buttonClicked={handleClick} /> {/* 渲染 MyButton 組件，並傳遞事件處理函數 */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyCalculator; // 將 MyCalculator 組件作為默認導出\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO,CAAC,CAAC;AACzC,OAAOC,SAAS,MAAM,aAAa,CAAC,CAAC;AACrC,OAAOC,QAAQ,MAAM,YAAY,CAAC,CAAC;AACnC,OAAO,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;;EAE3C;EACA,MAAMS,WAAW,GAAIC,KAAK,IAAK;IAC7B;IACA,QAAQA,KAAK;MACX,KAAK,GAAG;MACR,KAAK,GAAG;MACR,KAAK,GAAG;MACR,KAAK,GAAG;MACR,KAAK,GAAG;MACR,KAAK,GAAG;MACR,KAAK,GAAG;MACR,KAAK,GAAG;MACR,KAAK,GAAG;MACR,KAAK,GAAG;MACR,KAAK,GAAG;MACR,KAAK,GAAG;MACR,KAAK,GAAG;MACR,KAAK,GAAG;MACR,KAAK,GAAG;QACN,IAAIH,MAAM,KAAK,GAAG,EAAE;UAAE;UACpBC,SAAS,CAACE,KAAK,CAAC;QAClB,CAAC,MAAM;UAAE;UACPF,SAAS,CAACD,MAAM,GAAGG,KAAK,CAAC;QAC3B;QACA;MACF,KAAK,GAAG;QAAE;QACRF,SAAS,CAACG,IAAI,CAACJ,MAAM,CAAC,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QACpC;MACF,KAAK,GAAG;QAAE;QACRJ,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;QACf;MACF,KAAK,KAAK;QAAE;QACVA,SAAS,CAACK,QAAQ,CAACN,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACtC;MACF,KAAK,GAAG;QAAE;QACRC,SAAS,CAACK,QAAQ,CAACN,MAAM,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;QACvC;MACF;QACE;MAAO;IACX;EACF,CAAC;EAED,oBACEH,OAAA;IAAKU,SAAS,EAAC,YAAY;IAAAC,QAAA,GAAC,GAAC,eAC3BX,OAAA,CAACH,SAAS;MAACM,MAAM,EAAEA;IAAO;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC,eAC9Bf,OAAA,CAACF,QAAQ;MAACkB,aAAa,EAAEX;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEV;AAACb,EAAA,CAnDQD,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AAqDrB,eAAeA,YAAY,CAAC,CAAC;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}