{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\my-react-app\\\\src\\\\components\\\\tic-tac-toe\\\\TicTacToe.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\"; // 從 React 模組中引入 React 和 useState\nimport Board from \"./Board\"; // 引入 Board 組件\nimport \"./tictactoe.css\"; // 引入 tictactoe.css 樣式表\n\n// 定義 TicTacToe 組件\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TicTacToe() {\n  _s();\n  // 使用 useState 定義 history 狀態，初始值為一個包含 9 個 null 的數組\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  // 使用 useState 定義 currentMove 狀態，初始值為 0\n  const [currentMove, setCurrentMove] = useState(0);\n  // 獲取當前步的 squares\n  const currentSquares = history[currentMove];\n  // 判斷下一步是否由 X 執行\n  const xIsNext = currentMove % 2 === 0;\n\n  // 定義 handlePlay 函數，當下一步執行時更新歷史記錄和當前步數\n  const handlePlay = nextSquares => {\n    // 創建新的歷史記錄，包含至當前步數為止的記錄和下一步\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    // 更新 history 狀態\n    setHistory(nextHistory);\n    // 更新 currentMove 狀態為下一步的索引\n    setCurrentMove(nextHistory.length - 1);\n  };\n\n  // 定義 jumpTo 函數，用於跳轉到指定的步數\n  const jumpTo = nextMove => setCurrentMove(nextMove);\n\n  // 生成遊戲的歷史記錄按鈕列表\n  const moves = history.map((squares, move) => {\n    let description;\n    // 根據步數生成描述文字\n    if (move > 0) {\n      description = \"回到第 \" + move + \" 步\";\n    } else {\n      description = \"遊戲開始\";\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => jumpTo(move),\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  });\n  return (\n    /*#__PURE__*/\n    // 返回遊戲的主要結構\n    _jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          xIsNext: xIsNext,\n          squares: currentSquares,\n          onPlay: handlePlay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\u904A\\u6232\\u6B77\\u7A0B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n// 將 TicTacToe 組件導出，讓其他模組可以引入和使用\n_s(TicTacToe, \"xZZdy1/aP1agxyjHn6CL01lXnXc=\");\n_c = TicTacToe;\nexport default TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["React","useState","Board","jsxDEV","_jsxDEV","Fragment","_Fragment","TicTacToe","_s","history","setHistory","Array","fill","currentMove","setCurrentMove","currentSquares","xIsNext","handlePlay","nextSquares","nextHistory","slice","length","jumpTo","nextMove","moves","map","squares","move","description","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","onPlay","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/my-react-app/src/components/tic-tac-toe/TicTacToe.js"],"sourcesContent":["import React, { useState } from \"react\"; // 從 React 模組中引入 React 和 useState\r\nimport Board from \"./Board\"; // 引入 Board 組件\r\nimport \"./tictactoe.css\"; // 引入 tictactoe.css 樣式表\r\n\r\n// 定義 TicTacToe 組件\r\nfunction TicTacToe() {\r\n  // 使用 useState 定義 history 狀態，初始值為一個包含 9 個 null 的數組\r\n  const [history, setHistory] = useState([Array(9).fill(null)]);\r\n  // 使用 useState 定義 currentMove 狀態，初始值為 0\r\n  const [currentMove, setCurrentMove] = useState(0);\r\n  // 獲取當前步的 squares\r\n  const currentSquares = history[currentMove];\r\n  // 判斷下一步是否由 X 執行\r\n  const xIsNext = currentMove % 2 === 0;\r\n\r\n  // 定義 handlePlay 函數，當下一步執行時更新歷史記錄和當前步數\r\n  const handlePlay = (nextSquares) => {\r\n    // 創建新的歷史記錄，包含至當前步數為止的記錄和下一步\r\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\r\n    // 更新 history 狀態\r\n    setHistory(nextHistory);\r\n    // 更新 currentMove 狀態為下一步的索引\r\n    setCurrentMove(nextHistory.length - 1);\r\n  };\r\n\r\n  // 定義 jumpTo 函數，用於跳轉到指定的步數\r\n  const jumpTo = (nextMove) => setCurrentMove(nextMove);\r\n\r\n  // 生成遊戲的歷史記錄按鈕列表\r\n  const moves = history.map((squares, move) => {\r\n    let description;\r\n    // 根據步數生成描述文字\r\n    if (move > 0) {\r\n      description = \"回到第 \" + move + \" 步\";\r\n    } else {\r\n      description = \"遊戲開始\";\r\n    }\r\n    return (\r\n      <>\r\n        {/* 每個歷史記錄生成一個列表項，並設置 key 為 move */}\r\n        <li key={move}>\r\n          {/* 每個按鈕點擊時調用 jumpTo 函數，並傳入相應的步數 */}\r\n          <button onClick={() => jumpTo(move)}>{description}</button>\r\n        </li>\r\n      </>\r\n    );\r\n  });\r\n\r\n  return (\r\n    // 返回遊戲的主要結構\r\n    <div className=\"game\">\r\n      <div className=\"game-board\">\r\n        {/* 渲染 Board 組件，傳入 xIsNext, currentSquares 和 handlePlay 作為屬性 */}\r\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} />\r\n      </div>\r\n      <div className=\"game-info\">\r\n        {/* 渲染遊戲歷程的標題 */}\r\n        <h4>遊戲歷程</h4>\r\n        {/* 渲染歷史記錄的按鈕列表 */}\r\n        <ol>{moves}</ol>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// 將 TicTacToe 組件導出，讓其他模組可以引入和使用\r\nexport default TicTacToe;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}