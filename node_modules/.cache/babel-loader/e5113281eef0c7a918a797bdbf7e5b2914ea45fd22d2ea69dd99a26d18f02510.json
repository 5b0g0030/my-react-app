{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\my-react-app\\\\src\\\\components\\\\rgb-panel\\\\MyRGBPanel.js\",\n  _s = $RefreshSig$();\nimport React from \"react\"; // 從 react 庫中導入 React\nimport { useState } from \"react\"; // 從 react 庫中導入 useState 鉤子\nimport MySlider from \"./MySlider\"; // 導入自定義的 MySlider 組件\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MyRGBPanel() {\n  _s();\n  // 定義 MyRGBPanel 組件\n  const [r, setR] = useState(128); // 使用 useState 鉤子初始化紅色值為 128\n  const [g, setG] = useState(128); // 使用 useState 鉤子初始化綠色值為 128\n  const [b, setB] = useState(128); // 使用 useState 鉤子初始化藍色值為 128\n\n  const updateR = v => setR(v); // 更新紅色值的函數\n  const updateG = v => setG(v); // 更新綠色值的函數\n  const updateB = v => setB(v); // 更新藍色值的函數\n\n  const rgbCss = {\n    // 定義 RGB 面板的 CSS 樣式\n    border: \"1px solid blue\",\n    // 藍色邊框\n    borderRadius: \"20px\",\n    // 邊框圓角\n    width: \"300px\",\n    // 寬度為 300px\n    display: \"flex\",\n    // 使用 flex 布局\n    flexDirection: \"column\",\n    // 元素垂直排列\n    padding: \"20px\",\n    // 內邊距為 20px\n    justifyContent: \"center\",\n    // 垂直方向居中\n    alignItems: \"center\",\n    // 水平方向居中\n    margin: \"auto\" // 自動調整外邊距以居中對齊\n  };\n  return (\n    /*#__PURE__*/\n    // 返回要渲染的 JSX\n    _jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        style: rgbCss,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: \"red\"\n          },\n          children: [\" \", \"\\u76EE\\u524D\\u8272\\u5F69 \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"250px\",\n            // 宽度 250px\n            height: \"100px\",\n            // 高度 100px\n            backgroundColor: `rgb(${r}, ${g}, ${b})` // 背景顏色設置為當前的 RGB 值\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"R: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(MySlider, {\n          onChange: updateR\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"G: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(MySlider, {\n          onChange: updateG\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"B: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(MySlider, {\n          onChange: updateB\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  );\n}\n_s(MyRGBPanel, \"W+FGYHq7KToGtXfF3xlIDgAHvoM=\");\n_c = MyRGBPanel;\nexport default MyRGBPanel; // 將 MyRGBPanel 組件作為默認導出\nvar _c;\n$RefreshReg$(_c, \"MyRGBPanel\");","map":{"version":3,"names":["React","useState","MySlider","jsxDEV","_jsxDEV","Fragment","_Fragment","MyRGBPanel","_s","r","setR","g","setG","b","setB","updateR","v","updateG","updateB","rgbCss","border","borderRadius","width","display","flexDirection","padding","justifyContent","alignItems","margin","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","height","backgroundColor","onChange","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/my-react-app/src/components/rgb-panel/MyRGBPanel.js"],"sourcesContent":["import React from \"react\"; // 從 react 庫中導入 React\r\nimport { useState } from \"react\"; // 從 react 庫中導入 useState 鉤子\r\nimport MySlider from \"./MySlider\"; // 導入自定義的 MySlider 組件\r\n\r\nfunction MyRGBPanel() { // 定義 MyRGBPanel 組件\r\n  const [r, setR] = useState(128); // 使用 useState 鉤子初始化紅色值為 128\r\n  const [g, setG] = useState(128); // 使用 useState 鉤子初始化綠色值為 128\r\n  const [b, setB] = useState(128); // 使用 useState 鉤子初始化藍色值為 128\r\n\r\n  const updateR = (v) => setR(v); // 更新紅色值的函數\r\n  const updateG = (v) => setG(v); // 更新綠色值的函數\r\n  const updateB = (v) => setB(v); // 更新藍色值的函數\r\n\r\n  const rgbCss = { // 定義 RGB 面板的 CSS 樣式\r\n    border: \"1px solid blue\", // 藍色邊框\r\n    borderRadius: \"20px\", // 邊框圓角\r\n    width: \"300px\", // 寬度為 300px\r\n    display: \"flex\", // 使用 flex 布局\r\n    flexDirection: \"column\", // 元素垂直排列\r\n    padding: \"20px\", // 內邊距為 20px\r\n    justifyContent: \"center\", // 垂直方向居中\r\n    alignItems: \"center\", // 水平方向居中\r\n    margin: \"auto\", // 自動調整外邊距以居中對齊\r\n  };\r\n\r\n  return ( // 返回要渲染的 JSX\r\n    <> {/* React Fragment, 用於包裹多個元素 */}\r\n      <div style={rgbCss}> {/* 應用定義的 CSS 樣式 */}\r\n        <h2 style={{ color: \"red\" }}> {/* 標題顏色設置為紅色 */}\r\n          目前色彩 {/* 顯示文字 \"目前色彩\" */}\r\n        </h2>\r\n        <div\r\n          style={{\r\n            width: \"250px\", // 宽度 250px\r\n            height: \"100px\", // 高度 100px\r\n            backgroundColor: `rgb(${r}, ${g}, ${b})`, // 背景顏色設置為當前的 RGB 值\r\n          }}\r\n        />\r\n        <span>R: </span> {/* 顯示紅色標籤 */}\r\n        <MySlider onChange={updateR} /> {/* 渲染 MySlider 組件，並傳遞更新紅色值的函數 */}\r\n        <span>G: </span> {/* 顯示綠色標籤 */}\r\n        <MySlider onChange={updateG} /> {/* 渲染 MySlider 組件，並傳遞更新綠色值的函數 */}\r\n        <span>B: </span> {/* 顯示藍色標籤 */}\r\n        <MySlider onChange={updateB} /> {/* 渲染 MySlider 組件，並傳遞更新藍色值的函數 */}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyRGBPanel; // 將 MyRGBPanel 組件作為默認導出\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}