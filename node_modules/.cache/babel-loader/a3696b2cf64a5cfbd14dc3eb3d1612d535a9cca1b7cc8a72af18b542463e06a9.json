{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\my-react-app\\\\src\\\\components\\\\rgb-panel\\\\MySlider.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\"; // 從 React 中引入 useState Hook\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MySlider() {\n  _s();\n  // 定義 MySlider 組件\n  const [value, setValue] = useState(128); // 定義狀態變量 value，初始值為 128，並且 setValue 用於更新 value\n  const handleChange = e => {\n    // 定義 handleChange 函數來處理輸入變化事件\n    setValue(e.target.value); // 更新 value 為滑動條的當前值\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\" // 設置輸入類型為範圍滑動條\n      ,\n      width: \"200\" // 設置滑動條的寬度為 200\n      ,\n      min: \"0\" // 設置滑動條的最小值為 0\n      ,\n      max: \"255\" // 設置滑動條的最大值為 255\n      ,\n      value: value // 設置滑動條的當前值為狀態變量 value\n      ,\n      onChange: handleChange // 當滑動條的值變化時，調用 handleChange 函數\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_s(MySlider, \"eJE+6sted5OoGqIqtCc/KJqXdWs=\");\n_c = MySlider;\nexport default MySlider; // 將 MySlider 組件作為默認導出\nvar _c;\n$RefreshReg$(_c, \"MySlider\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","MySlider","_s","value","setValue","handleChange","e","target","children","type","width","min","max","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/my-react-app/src/components/rgb-panel/MySlider.js"],"sourcesContent":["import { useState } from \"react\"; // 從 React 中引入 useState Hook\r\n\r\nfunction MySlider() { // 定義 MySlider 組件\r\n  const [value, setValue] = useState(128); // 定義狀態變量 value，初始值為 128，並且 setValue 用於更新 value\r\n  const handleChange = (e) => { // 定義 handleChange 函數來處理輸入變化事件\r\n    setValue(e.target.value); // 更新 value 為滑動條的當前值\r\n  };\r\n  return (\r\n    <div> {/* 包裹輸入元素和顯示數值的 div */}\r\n      <input\r\n        type=\"range\" // 設置輸入類型為範圍滑動條\r\n        width=\"200\" // 設置滑動條的寬度為 200\r\n        min=\"0\" // 設置滑動條的最小值為 0\r\n        max=\"255\" // 設置滑動條的最大值為 255\r\n        value={value} // 設置滑動條的當前值為狀態變量 value\r\n        onChange={handleChange} // 當滑動條的值變化時，調用 handleChange 函數\r\n      />\r\n      <span>{value}</span> {/* 顯示當前滑動條的值 */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MySlider; // 將 MySlider 組件作為默認導出"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAAE;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;EACzC,MAAMO,YAAY,GAAIC,CAAC,IAAK;IAAE;IAC5BF,QAAQ,CAACE,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAC,CAAC,CAAC;EAC5B,CAAC;EACD,oBACEH,OAAA;IAAAQ,QAAA,GAAK,GAAC,eACJR,OAAA;MACES,IAAI,EAAC,OAAO,CAAC;MAAA;MACbC,KAAK,EAAC,KAAK,CAAC;MAAA;MACZC,GAAG,EAAC,GAAG,CAAC;MAAA;MACRC,GAAG,EAAC,KAAK,CAAC;MAAA;MACVT,KAAK,EAAEA,KAAM,CAAC;MAAA;MACdU,QAAQ,EAAER,YAAa,CAAC;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACFjB,OAAA;MAAAQ,QAAA,EAAOL;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEV;AAACf,EAAA,CAlBQD,QAAQ;AAAAiB,EAAA,GAARjB,QAAQ;AAoBjB,eAAeA,QAAQ,CAAC,CAAC;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}