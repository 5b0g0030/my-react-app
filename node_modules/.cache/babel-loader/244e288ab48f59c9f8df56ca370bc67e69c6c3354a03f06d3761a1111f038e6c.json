{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\my-react-app\\\\src\\\\components\\\\MyRGBPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\"; // 從 React 模組中引入 React 和 useState\nimport MySlider from \"./MySlider\"; // 引入 MySlider 組件\n\n// 定義 MyRGBPanel 組件\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MyRGBPanel() {\n  _s();\n  // 使用 useState 定義 r, g, b 狀態，初始值為 128\n  const [r, setR] = useState(128);\n  const [g, setG] = useState(128);\n  const [b, setB] = useState(128);\n\n  // 定義更新 r, g, b 狀態的函數\n  const updateR = v => setR(v);\n  const updateG = v => setG(v);\n  const updateB = v => setB(v);\n\n  // 定義用於設置樣式的 CSS 對象\n  const rgbCss = {\n    border: \"1px solid blue\",\n    // 藍色邊框\n    borderRadius: \"20px\",\n    // 圓角半徑為 20px\n    width: \"300px\",\n    // 寬度為 300px\n    display: \"flex\",\n    // 使用 flex 佈局\n    flexDirection: \"column\",\n    // 垂直排列\n    padding: \"20px\",\n    // 內邊距為 20px\n    justifyContent: \"center\",\n    // 垂直居中對齊\n    alignItems: \"center\",\n    // 水平居中對齊\n    margin: \"auto\" // 自動外邊距\n  };\n\n  // 返回 MyRGBPanel 組件的 JSX 結構\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: rgbCss,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"\\u76EE\\u524D\\u8272\\u5F69\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"250px\",\n          height: \"100px\",\n          backgroundColor: `rgb(${r}, ${g}, ${b})` // 背景色根據 r, g, b 動態變化\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"R: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MySlider, {\n        onChange: updateR\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"G: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MySlider, {\n        onChange: updateG\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"B: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MySlider, {\n        onChange: updateB\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n// 將 MyRGBPanel 組件導出，以便其他模組引入和使用\n_s(MyRGBPanel, \"W+FGYHq7KToGtXfF3xlIDgAHvoM=\");\n_c = MyRGBPanel;\nexport default MyRGBPanel;\nvar _c;\n$RefreshReg$(_c, \"MyRGBPanel\");","map":{"version":3,"names":["React","useState","MySlider","jsxDEV","_jsxDEV","Fragment","_Fragment","MyRGBPanel","_s","r","setR","g","setG","b","setB","updateR","v","updateG","updateB","rgbCss","border","borderRadius","width","display","flexDirection","padding","justifyContent","alignItems","margin","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","height","backgroundColor","onChange","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/my-react-app/src/components/MyRGBPanel.js"],"sourcesContent":["import React, { useState } from \"react\"; // 從 React 模組中引入 React 和 useState\r\nimport MySlider from \"./MySlider\"; // 引入 MySlider 組件\r\n\r\n// 定義 MyRGBPanel 組件\r\nfunction MyRGBPanel() {\r\n    // 使用 useState 定義 r, g, b 狀態，初始值為 128\r\n    const [r, setR] = useState(128);\r\n    const [g, setG] = useState(128);\r\n    const [b, setB] = useState(128);\r\n\r\n    // 定義更新 r, g, b 狀態的函數\r\n    const updateR = (v) => setR(v);\r\n    const updateG = (v) => setG(v);\r\n    const updateB = (v) => setB(v);\r\n\r\n    // 定義用於設置樣式的 CSS 對象\r\n    const rgbCss = {\r\n        border: \"1px solid blue\", // 藍色邊框\r\n        borderRadius: \"20px\", // 圓角半徑為 20px\r\n        width: \"300px\", // 寬度為 300px\r\n        display: \"flex\", // 使用 flex 佈局\r\n        flexDirection: \"column\", // 垂直排列\r\n        padding: \"20px\", // 內邊距為 20px\r\n        justifyContent: \"center\", // 垂直居中對齊\r\n        alignItems: \"center\", // 水平居中對齊\r\n        margin: \"auto\", // 自動外邊距\r\n    };\r\n\r\n    // 返回 MyRGBPanel 組件的 JSX 結構\r\n    return (\r\n        <>\r\n            <div style={rgbCss}>\r\n                <h2 style={{ color: \"red\" }}>目前色彩</h2>\r\n                <div\r\n                    style={{\r\n                        width: \"250px\",\r\n                        height: \"100px\",\r\n                        backgroundColor: `rgb(${r}, ${g}, ${b})`, // 背景色根據 r, g, b 動態變化\r\n                    }}\r\n                />\r\n                <span>R: </span>\r\n                {/* 渲染 MySlider 組件，傳遞 updateR 函數作為 onChange 屬性 */}\r\n                <MySlider onChange={updateR} />\r\n                <span>G: </span>\r\n                {/* 渲染 MySlider 組件，傳遞 updateG 函數作為 onChange 屬性 */}\r\n                <MySlider onChange={updateG} />\r\n                <span>B: </span>\r\n                {/* 渲染 MySlider 組件，傳遞 updateB 函數作為 onChange 屬性 */}\r\n                <MySlider onChange={updateB} />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n// 將 MyRGBPanel 組件導出，以便其他模組引入和使用\r\nexport default MyRGBPanel;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO,CAAC,CAAC;AACzC,OAAOC,QAAQ,MAAM,YAAY,CAAC,CAAC;;AAEnC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB;EACA,MAAM,CAACC,CAAC,EAAEC,IAAI,CAAC,GAAGT,QAAQ,CAAC,GAAG,CAAC;EAC/B,MAAM,CAACU,CAAC,EAAEC,IAAI,CAAC,GAAGX,QAAQ,CAAC,GAAG,CAAC;EAC/B,MAAM,CAACY,CAAC,EAAEC,IAAI,CAAC,GAAGb,QAAQ,CAAC,GAAG,CAAC;;EAE/B;EACA,MAAMc,OAAO,GAAIC,CAAC,IAAKN,IAAI,CAACM,CAAC,CAAC;EAC9B,MAAMC,OAAO,GAAID,CAAC,IAAKJ,IAAI,CAACI,CAAC,CAAC;EAC9B,MAAME,OAAO,GAAIF,CAAC,IAAKF,IAAI,CAACE,CAAC,CAAC;;EAE9B;EACA,MAAMG,MAAM,GAAG;IACXC,MAAM,EAAE,gBAAgB;IAAE;IAC1BC,YAAY,EAAE,MAAM;IAAE;IACtBC,KAAK,EAAE,OAAO;IAAE;IAChBC,OAAO,EAAE,MAAM;IAAE;IACjBC,aAAa,EAAE,QAAQ;IAAE;IACzBC,OAAO,EAAE,MAAM;IAAE;IACjBC,cAAc,EAAE,QAAQ;IAAE;IAC1BC,UAAU,EAAE,QAAQ;IAAE;IACtBC,MAAM,EAAE,MAAM,CAAE;EACpB,CAAC;;EAED;EACA,oBACIxB,OAAA,CAAAE,SAAA;IAAAuB,QAAA,eACIzB,OAAA;MAAK0B,KAAK,EAAEX,MAAO;MAAAU,QAAA,gBACfzB,OAAA;QAAI0B,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAM,CAAE;QAAAF,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtC/B,OAAA;QACI0B,KAAK,EAAE;UACHR,KAAK,EAAE,OAAO;UACdc,MAAM,EAAE,OAAO;UACfC,eAAe,EAAG,OAAM5B,CAAE,KAAIE,CAAE,KAAIE,CAAE,GAAE,CAAE;QAC9C;MAAE;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACF/B,OAAA;QAAAyB,QAAA,EAAM;MAAG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAEhB/B,OAAA,CAACF,QAAQ;QAACoC,QAAQ,EAAEvB;MAAQ;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/B/B,OAAA;QAAAyB,QAAA,EAAM;MAAG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAEhB/B,OAAA,CAACF,QAAQ;QAACoC,QAAQ,EAAErB;MAAQ;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/B/B,OAAA;QAAAyB,QAAA,EAAM;MAAG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAEhB/B,OAAA,CAACF,QAAQ;QAACoC,QAAQ,EAAEpB;MAAQ;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B;EAAC,gBACR,CAAC;AAEX;;AAEA;AAAA3B,EAAA,CAlDSD,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AAmDnB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}